/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package networkcapture;

import com.sun.java.swing.plaf.windows.WindowsLookAndFeel;
import java.beans.PropertyVetoException;
import java.io.IOException;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import jpcap.JpcapCaptor;
import jpcap.NetworkInterface;
import jpcap.NetworkInterfaceAddress;
import jpcap.PacketReceiver;
import jpcap.packet.ICMPPacket;
import jpcap.packet.Packet;
import jpcap.packet.TCPPacket;
import jpcap.packet.UDPPacket;
import networkcapture.lib.PacketTableWriter;
import networkcapture.view.PacketTrafficAnalyser;

/**
 *
 * @author tharaka
 */
public class MainFrame extends javax.swing.JFrame {

    
    private int openFrameCount;
    private final int xOffset = 20;
    private final int yOffset = 20;
    private final HashMap<String,JInternalFrame> iframes;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        iframes = new HashMap<> ();
   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSplitPane1 = new javax.swing.JSplitPane();
        dskMain = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        btnPktTraffic = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        jMenu3.setText("jMenu3");

        jMenuItem1.setText("jMenuItem1");
        jMenu3.add(jMenuItem1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSplitPane1.setDividerLocation(150);
        jSplitPane1.setLastDividerLocation(150);

        dskMain.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout dskMainLayout = new javax.swing.GroupLayout(dskMain);
        dskMain.setLayout(dskMainLayout);
        dskMainLayout.setHorizontalGroup(
            dskMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 922, Short.MAX_VALUE)
        );
        dskMainLayout.setVerticalGroup(
            dskMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 499, Short.MAX_VALUE)
        );

        jSplitPane1.setRightComponent(dskMain);

        jPanel1.setPreferredSize(new java.awt.Dimension(150, 455));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 149, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 499, Short.MAX_VALUE)
        );

        jSplitPane1.setLeftComponent(jPanel1);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        jToolBar1.setRollover(true);

        btnPktTraffic.setText("Packet Traffic");
        btnPktTraffic.setFocusable(false);
        btnPktTraffic.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPktTraffic.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnPktTraffic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPktTrafficActionPerformed(evt);
            }
        });
        jToolBar1.add(btnPktTraffic);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPktTrafficActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPktTrafficActionPerformed

        if (iframes.containsKey("PktTraffic")) {
            JInternalFrame jintfrm = (JInternalFrame) iframes.get("PktTraffic");
            this.addIntFrame(jintfrm);
        } else {
            PacketTrafficAnalyser packetTrafficAnalyser = new PacketTrafficAnalyser();
            iframes.put("PktTraffic", packetTrafficAnalyser);
            this.addIntFrame(packetTrafficAnalyser);
        }
    }//GEN-LAST:event_btnPktTrafficActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//
//                }
//            }
            
            UIManager.setLookAndFeel(new WindowsLookAndFeel());
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(MainFrame.class
//                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(MainFrame.class
//                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(MainFrame.class
//                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPktTraffic;
    private javax.swing.JDesktopPane dskMain;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables

    public void addIntFrame(JInternalFrame jif) {
        dskMain.add(jif);
        jif.setVisible(true);
        openFrameCount = getOpenedFrameCount();
        jif.setLocation(xOffset * openFrameCount, yOffset * openFrameCount);
        try {
           
            jif.setSelected(true);
        } catch (PropertyVetoException ex) {
            JOptionPane.showMessageDialog(null, "Cannot Select Opened Window");
        }
       
    }

    private int getOpenedFrameCount() {
        openFrameCount = 0;
        JInternalFrame[] frames = dskMain.getAllFrames();
        for (int i = 0; i < frames.length; i++) {
            openFrameCount = i;
        }
        return openFrameCount;
    }

}
